openapi: "3.0.1"
info:
  title: "RestApi"
  version: "0.1"
Globals:
  Api:
    OpenApiVersion: '3.0.1'
paths:
  /birthday:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BirthdayPost"
        required: true
      responses:
        400:
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
      x-amazon-apigateway-request-validator: "Validate body"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BirthdayPostFunction.Arn}/invocations"
        responses:
          Malformed input:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'https://kaustubhk.com'"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"message\"\
                  \ : \"$inputRoot.errorMessage\"\n}"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'https://kaustubhk.com'"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"message\"\
                  \ : \"$inputRoot.message\"\n}"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        requestTemplates:
          application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"firstName\"\
            \ : \"$util.escapeJavaScript($inputRoot.firstName).replaceAll(\"\\\\'\"\
            ,\"'\")\",\n  \"lastName\" : \"$util.escapeJavaScript($inputRoot.lastName).replaceAll(\"\
            \\\\'\",\"'\")\",\n  \"email\" : \"$util.escapeJavaScript($inputRoot.email).replaceAll(\"\
            \\\\'\",\"'\")\",\n  \"subtext\" : \"$util.escapeJavaScript($inputRoot.subtext).replaceAll(\"\
            \\\\'\",\"'\")\",\n  \"day\" : $inputRoot.day,\n  \"month\" : $inputRoot.month,\n\
            \  \"timezone\" : $inputRoot.timezone\n}"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
    options:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Max-Age: "'3600'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type'"
              method.response.header.Access-Control-Allow-Origin: "'https://kaustubhk.com'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
  /contact-form:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactMeForm"
        required: true
      responses:
        400:
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
      x-amazon-apigateway-request-validator: "Validate body"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ContactMeFormFunction.Arn}/invocations"
        responses:
          Malformed input:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'https://kaustubhk.com'"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"message\"\
                \ : \"$inputRoot.errorMessage\"\n}"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'https://kaustubhk.com'"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"message\"\
                \ : \"$inputRoot.message\"\n}"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        requestTemplates:
          application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"firstName\"\
            \ : \"$util.escapeJavaScript($inputRoot.firstName).replaceAll(\"\\\\'\"\
            ,\"'\")\",\n  \"lastName\" : \"$util.escapeJavaScript($inputRoot.lastName).replaceAll(\"\
            \\\\'\",\"'\")\",\n  \"email\" : \"$util.escapeJavaScript($inputRoot.email).replaceAll(\"\
            \\\\'\",\"'\")\",\n  \"subject\" : \"$util.escapeJavaScript($inputRoot.subject).replaceAll(\"\
            \\\\'\",\"'\")\",\n  \"message\" : \"$util.escapeJavaScript($inputRoot.message).replaceAll(\"\
            \\\\'\",\"'\")\",\n  \"recaptcha\" : \"$util.escapeJavaScript($inputRoot.recaptcha).replaceAll(\"\
            \\\\'\",\"'\")\"\n}"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
    options:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Max-Age: "'3600'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type'"
              method.response.header.Access-Control-Allow-Origin: "'https://kaustubhk.com'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
    ContactMeForm:
      title: "Contact Me Form"
      required:
        - "email"
        - "firstName"
        - "lastName"
        - "message"
        - "subject"
        - "recaptcha"
      type: "object"
      properties:
        firstName:
          maxLength: 50
          type: "string"
        lastName:
          maxLength: 50
          type: "string"
        email:
          type: "string"
          format: "email"
        subject:
          maxLength: 50
          type: "string"
        message:
          maxLength: 500
          type: "string"
        recaptcha:
          type: "string"
      description: "Model for contact me form"
    BirthdayPost:
      title: "Add birthdays to database"
      required:
        - "email"
        - "firstName"
        - "lastName"
        - "subtext"
        - "day"
        - "month"
        - "timezone"
      type: "object"
      properties:
        firstName:
          maxLength: 50
          type: "string"
        lastName:
          maxLength: 50
          type: "string"
        email:
          type: "string"
          format: "email"
        subtext:
          maxLength: 100
          type: "string"
        day:
          minimum: 1
          maximum: 31
          type: "integer"
        month:
          minimum: 1
          maximum: 12
          type: "integer"
        timezone:
          minimum: -12
          maximum: 13
          multipleOf: 0.25
          type: "number"
      description: "Model for form to add birthdays"
    Error:
      title: "Error Schema"
      type: "object"
      properties:
        message:
          type: "string"
    Success:
      title: "Success Schema"
      type: "object"
      properties:
        message:
          type: "string"
x-amazon-apigateway-gateway-responses:
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
      gatewayresponse.header.Access-Control-Max-Age: "'3600'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'https://kaustubhk.com'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type'"
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
      gatewayresponse.header.Access-Control-Max-Age: "'3600'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'https://kaustubhk.com'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type'"
x-amazon-apigateway-request-validators:
  Validate body:
    validateRequestParameters: false
    validateRequestBody: true
